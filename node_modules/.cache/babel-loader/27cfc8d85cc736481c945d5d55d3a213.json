{"ast":null,"code":"var _jsxFileName = \"/home/ridho/Desktop/ridh0/suhuu/src/Components/Weather.js\";\nimport React from \"react\";\nimport ReactWeather from \"react-open-weather\";\nimport \"react-open-weather/lib/css/ReactWeather.css\";\nimport axios from \"axios\";\nexport default class Weather extends React.Component {\n  constructor() {\n    super();\n\n    this.getLocation = async () => {\n      let result = await axios.get(`http://api.ipstack.com/check?access_key=6bec36e242f15bca37761f998bd88d62`);\n      let latt = result.data.latitude;\n      let lonn = result.data.longitude; // let resJson = JSON.stringify(result);\n      // console.log(city);\n\n      this.setState({ ...this.state,\n        lat: latt,\n        lon: lonn\n      });\n    };\n\n    this.state = {\n      data: \"\",\n      loading: true,\n      API: process.env.REACT_APP_PUB_KEY,\n      lat: null,\n      lon: null\n    };\n  }\n\n  componentDidMount() {\n    // this.getIP();\n    this.getLocation();\n  }\n\n  // getIP = () => {\n  //   axios\n  //     .get(\n  //       `https://api.openweathermap.org/data/2.5/weather?q=Depok &appid=${this.state.API}`\n  //     )\n  //     .then(res => console.log(res));\n  // };\n  render() {\n    return /*#__PURE__*/React.createElement(ReactWeather, {\n      forecast: \"today\",\n      unit: \"metric\",\n      apikey: this.state.API,\n      type: \"geo\",\n      lat: this.state.lat,\n      lon: this.state.lon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }\n    });\n  }\n\n}","map":{"version":3,"sources":["/home/ridho/Desktop/ridh0/suhuu/src/Components/Weather.js"],"names":["React","ReactWeather","axios","Weather","Component","constructor","getLocation","result","get","latt","data","latitude","lonn","longitude","setState","state","lat","lon","loading","API","process","env","REACT_APP_PUB_KEY","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,oBAAzB;AACA,OAAO,6CAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,eAAe,MAAMC,OAAN,SAAsBH,KAAK,CAACI,SAA5B,CAAsC;AACnDC,EAAAA,WAAW,GAAG;AACZ;;AADY,SAcdC,WAdc,GAcA,YAAY;AACxB,UAAIC,MAAM,GAAG,MAAML,KAAK,CAACM,GAAN,CAChB,0EADgB,CAAnB;AAGA,UAAIC,IAAI,GAAGF,MAAM,CAACG,IAAP,CAAYC,QAAvB;AACA,UAAIC,IAAI,GAAGL,MAAM,CAACG,IAAP,CAAYG,SAAvB,CALwB,CAOxB;AACA;;AAEA,WAAKC,QAAL,CAAc,EACZ,GAAG,KAAKC,KADI;AAEZC,QAAAA,GAAG,EAAEP,IAFO;AAGZQ,QAAAA,GAAG,EAAEL;AAHO,OAAd;AAKD,KA7Ba;;AAEZ,SAAKG,KAAL,GAAa;AACXL,MAAAA,IAAI,EAAE,EADK;AAEXQ,MAAAA,OAAO,EAAE,IAFE;AAGXC,MAAAA,GAAG,EAAEC,OAAO,CAACC,GAAR,CAAYC,iBAHN;AAIXN,MAAAA,GAAG,EAAE,IAJM;AAKXC,MAAAA,GAAG,EAAE;AALM,KAAb;AAOD;;AACDM,EAAAA,iBAAiB,GAAG;AAClB;AACA,SAAKjB,WAAL;AACD;;AAkBD;AACA;AACA;AACA;AACA;AACA;AACA;AAEAkB,EAAAA,MAAM,GAAG;AACP,wBACE,oBAAC,YAAD;AACE,MAAA,QAAQ,EAAC,OADX;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,MAAM,EAAE,KAAKT,KAAL,CAAWI,GAHrB;AAIE,MAAA,IAAI,EAAC,KAJP;AAKE,MAAA,GAAG,EAAE,KAAKJ,KAAL,CAAWC,GALlB;AAME,MAAA,GAAG,EAAE,KAAKD,KAAL,CAAWE,GANlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAUD;;AAnDkD","sourcesContent":["import React from \"react\";\nimport ReactWeather from \"react-open-weather\";\nimport \"react-open-weather/lib/css/ReactWeather.css\";\nimport axios from \"axios\";\nexport default class Weather extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      data: \"\",\n      loading: true,\n      API: process.env.REACT_APP_PUB_KEY,\n      lat: null,\n      lon: null\n    };\n  }\n  componentDidMount() {\n    // this.getIP();\n    this.getLocation();\n  }\n  getLocation = async () => {\n    let result = await axios.get(\n      `http://api.ipstack.com/check?access_key=6bec36e242f15bca37761f998bd88d62`\n    );\n    let latt = result.data.latitude;\n    let lonn = result.data.longitude;\n\n    // let resJson = JSON.stringify(result);\n    // console.log(city);\n\n    this.setState({\n      ...this.state,\n      lat: latt,\n      lon: lonn\n    });\n  };\n\n  // getIP = () => {\n  //   axios\n  //     .get(\n  //       `https://api.openweathermap.org/data/2.5/weather?q=Depok &appid=${this.state.API}`\n  //     )\n  //     .then(res => console.log(res));\n  // };\n\n  render() {\n    return (\n      <ReactWeather\n        forecast=\"today\"\n        unit=\"metric\"\n        apikey={this.state.API}\n        type=\"geo\"\n        lat={this.state.lat}\n        lon={this.state.lon}\n      />\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}