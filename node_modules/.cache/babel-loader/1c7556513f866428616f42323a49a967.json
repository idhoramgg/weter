{"ast":null,"code":"var _jsxFileName = \"/home/ridho/Desktop/ridh0/suhuu/src/Components/Weather.js\";\nimport React from \"react\";\nimport ReactWeather from \"react-open-weather\";\nimport \"react-open-weather/lib/css/ReactWeather.css\";\nimport axios from \"axios\";\nexport default class Weather extends React.Component {\n  constructor() {\n    super();\n\n    this.getLocation = async () => {\n      let result = await axios.get(`http://api.ipstack.com/check?access_key=6bec36e242f15bca37761f998bd88d62`);\n      let city = result.data.city; // let resJson = JSON.stringify(result);\n\n      console.log(city);\n      this.setState({ ...this.state,\n        city: city\n      });\n    };\n\n    this.state = {\n      data: \"\",\n      loading: true,\n      API: process.env.REACT_APP_PUB_KEY\n    };\n  }\n\n  componentDidMount() {\n    this.getLocation();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(ReactWeather, {\n      forecast: \"today\",\n      unit: \"metric\",\n      apikey: this.state.API,\n      type: \"city\",\n      city: this.state.city,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }\n    });\n  }\n\n}","map":{"version":3,"sources":["/home/ridho/Desktop/ridh0/suhuu/src/Components/Weather.js"],"names":["React","ReactWeather","axios","Weather","Component","constructor","getLocation","result","get","city","data","console","log","setState","state","loading","API","process","env","REACT_APP_PUB_KEY","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,oBAAzB;AACA,OAAO,6CAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,eAAe,MAAMC,OAAN,SAAsBH,KAAK,CAACI,SAA5B,CAAsC;AACnDC,EAAAA,WAAW,GAAG;AACZ;;AADY,SAWdC,WAXc,GAWA,YAAY;AACxB,UAAIC,MAAM,GAAG,MAAML,KAAK,CAACM,GAAN,CAChB,0EADgB,CAAnB;AAGA,UAAIC,IAAI,GAAGF,MAAM,CAACG,IAAP,CAAYD,IAAvB,CAJwB,CAKxB;;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AAEA,WAAKI,QAAL,CAAc,EACZ,GAAG,KAAKC,KADI;AAEZL,QAAAA,IAAI,EAAEA;AAFM,OAAd;AAID,KAvBa;;AAEZ,SAAKK,KAAL,GAAa;AACXJ,MAAAA,IAAI,EAAE,EADK;AAEXK,MAAAA,OAAO,EAAE,IAFE;AAGXC,MAAAA,GAAG,EAAEC,OAAO,CAACC,GAAR,CAAYC;AAHN,KAAb;AAKD;;AACDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKd,WAAL;AACD;;AAeDe,EAAAA,MAAM,GAAG;AACP,wBACE,oBAAC,YAAD;AACE,MAAA,QAAQ,EAAC,OADX;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,MAAM,EAAE,KAAKP,KAAL,CAAWE,GAHrB;AAIE,MAAA,IAAI,EAAC,MAJP;AAKE,MAAA,IAAI,EAAE,KAAKF,KAAL,CAAWL,IALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AASD;;AApCkD","sourcesContent":["import React from \"react\";\nimport ReactWeather from \"react-open-weather\";\nimport \"react-open-weather/lib/css/ReactWeather.css\";\nimport axios from \"axios\";\nexport default class Weather extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      data: \"\",\n      loading: true,\n      API: process.env.REACT_APP_PUB_KEY\n    };\n  }\n  componentDidMount() {\n    this.getLocation();\n  }\n  getLocation = async () => {\n    let result = await axios.get(\n      `http://api.ipstack.com/check?access_key=6bec36e242f15bca37761f998bd88d62`\n    );\n    let city = result.data.city;\n    // let resJson = JSON.stringify(result);\n    console.log(city);\n\n    this.setState({\n      ...this.state,\n      city: city\n    });\n  };\n\n  render() {\n    return (\n      <ReactWeather\n        forecast=\"today\"\n        unit=\"metric\"\n        apikey={this.state.API}\n        type=\"city\"\n        city={this.state.city}\n      />\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}